%%
%% Autogenerated by Thrift Compiler (0.8.0)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(kestrel_thrift).
-behaviour(thrift_service).


-include("kestrel_thrift.hrl").

-export([struct_info/1, function_info/2]).

struct_info('i am a dummy struct') -> undefined.
%%% interface
% put(This, Queue_name, Items, Expiration_msec)
function_info('put', params_type) ->
  {struct, [{1, string}, {2, {list, string}}, {3, i32}]}
;
function_info('put', reply_type) ->
  i32;
function_info('put', exceptions) ->
  {struct, []}
;
% get(This, Queue_name, Max_items, Timeout_msec, Auto_abort_msec)
function_info('get', params_type) ->
  {struct, [{1, string}, {2, i32}, {3, i32}, {4, i32}]}
;
function_info('get', reply_type) ->
  {list, {struct, {'kestrel_types', 'item'}}};
function_info('get', exceptions) ->
  {struct, []}
;
% confirm(This, Queue_name, Ids)
function_info('confirm', params_type) ->
  {struct, [{1, string}, {2, {set, i64}}]}
;
function_info('confirm', reply_type) ->
  i32;
function_info('confirm', exceptions) ->
  {struct, []}
;
% abort(This, Queue_name, Ids)
function_info('abort', params_type) ->
  {struct, [{1, string}, {2, {set, i64}}]}
;
function_info('abort', reply_type) ->
  i32;
function_info('abort', exceptions) ->
  {struct, []}
;
% peek(This, Queue_name)
function_info('peek', params_type) ->
  {struct, [{1, string}]}
;
function_info('peek', reply_type) ->
  {struct, {'kestrel_types', 'queueInfo'}};
function_info('peek', exceptions) ->
  {struct, []}
;
% flush_queue(This, Queue_name)
function_info('flush_queue', params_type) ->
  {struct, [{1, string}]}
;
function_info('flush_queue', reply_type) ->
  {struct, []};
function_info('flush_queue', exceptions) ->
  {struct, []}
;
% flush_all_queues(This)
function_info('flush_all_queues', params_type) ->
  {struct, []}
;
function_info('flush_all_queues', reply_type) ->
  {struct, []};
function_info('flush_all_queues', exceptions) ->
  {struct, []}
;
% delete_queue(This, Queue_name)
function_info('delete_queue', params_type) ->
  {struct, [{1, string}]}
;
function_info('delete_queue', reply_type) ->
  {struct, []};
function_info('delete_queue', exceptions) ->
  {struct, []}
;
% current_status(This)
function_info('current_status', params_type) ->
  {struct, []}
;
function_info('current_status', reply_type) ->
  i32;
function_info('current_status', exceptions) ->
  {struct, []}
;
% set_status(This, Status)
function_info('set_status', params_type) ->
  {struct, [{1, i32}]}
;
function_info('set_status', reply_type) ->
  {struct, []};
function_info('set_status', exceptions) ->
  {struct, []}
;
% get_version(This)
function_info('get_version', params_type) ->
  {struct, []}
;
function_info('get_version', reply_type) ->
  string;
function_info('get_version', exceptions) ->
  {struct, []}
;
function_info(_Func, _Info) -> no_function.

